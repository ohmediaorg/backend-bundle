<script src="/backend/js/tinymce/tinymce.min.js"></script>

<script async>
function OH_MEDIA_TINYMCE(container, selector) {
  const els = container.querySelectorAll(selector);

  els.forEach(el => {
    el.required = false;

    tinymce.init({
      target: el,
      plugins: {{ plugins|json_encode|raw }},
      toolbar: {{ toolbar|json_encode|raw }},
      license_key: 'gpl',
    });
  });
}

tinymce.PluginManager.add('shortcodes', (editor, url) => {
  let shortcode = null;

  const openDialog = () => editor.windowManager.open({
    title: 'Shortcodes',
    body: {
      type: 'panel',
      items: [
        {
          type: 'tree',
          onLeafAction: (id) => {
            shortcode = id;
          },
          items: [
            {
              type: 'directory',
              id: 'testimonials',
              title: 'Testimonials',
              children: [
                {
                  type: 'leaf',
                  title: 'All Testimonials',
                  id: 'testimonials()'
                },
                {
                  type: 'leaf',
                  title: 'One Random Testimonial',
                  id: 'testimonial()',
                },
                {
                  type: 'leaf',
                  title: 'Ryan Karikas (ID:1)',
                  id: 'testimonial(1)',
                },
              ]
            },
            {
              type: 'directory',
              id: 'videos',
              title: 'Videos',
              children: [
                {
                  type: 'leaf',
                  title: '4K Long Relax Video with Music (ID:2)',
                  id: 'videos(2)'
                },
                {
                  type: 'leaf',
                  title: 'Meeting of the Black Republicans - Key & Peele (ID:1)',
                  id: 'videos(1)',
                },
                {
                  type: 'leaf',
                  title: 'What\'s My Name (ID:3)',
                  id: 'videos(3)',
                },
              ]
            },
          ]
        },
      ]
    },
    buttons: [
      {
        type: 'cancel',
        text: 'Close'
      },
      {
        type: 'submit',
        text: 'Insert',
        buttonType: 'primary'
      }
    ],
    onSubmit: (api) => {
      if (shortcode) {
        editor.insertContent('{{ '{{ ' }}' + shortcode + '{{ ' }}' }}');
      }

      api.close();
    }
  });
  editor.ui.registry.addButton('shortcodes', {
    name: 'Shortcodes',
    icon: 'code-sample',
    onAction: () => {
      shortcode = null;
      openDialog();
    }
  });
  editor.ui.registry.addMenuItem('shortcodes', {
    text: 'Shortcodes',
    icon: 'code-sample',
    onAction: () => {
      shortcode = null;
      openDialog();
    }
  });
  return {
    getMetadata: () => ({
      name: 'Shortcodes',
      url: 'https://ohmedia.ca'
    })
  };
});

document.addEventListener('DOMContentLoaded', function() {
  OH_MEDIA_TINYMCE(document, 'textarea.wysiwyg');

  const observer = new MutationObserver(function(mutationList, observer) {
    for (const mutation of mutationList) {
      if ('childList' !== mutation.type) {
        continue;
      }

      OH_MEDIA_TINYMCE(mutation.target, 'textarea.wysiwyg');
    }
  });

  observer.observe(document.body, {
    childList: true,
    subtree: true,
  });
});
</script>
